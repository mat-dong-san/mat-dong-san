<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="estateMapper">
	
	<select id="selectEstate" resultMap="estateInfoResultSet">
		select *
		from product
		join product_application on(product.p_id = product_application.p_id)
		join estateagent on(estateagent.e_id = product_application.e_id)
		where product.p_id=#{p_id}
	</select>

	<resultMap type="Estate" id="estateInfoResultSet">
		<id column="E_ID" property="e_id"/>
		<result column="E_NAME" property="e_name"/>
		<result column="E_PHONE" property="e_phone"/>
		<result column="E_CONTENT" property="e_content"/>
		<result column="E_ADDR" property="e_addr"/>
		<result column="E_PICTURE" property="e_picture"/>
		<result column="E_FIELD" property="e_field"/>
		<result column="E_REG_NUM" property="e_reg_num"/>
		<result column="E_COORD" property="e_coord"/>
		<result column="E_C_LAT" property="e_c_lat"/>
		<result column="E_C_LNG" property="e_c_lng"/>
		<result column="E_POINT" property="e_point"/>
		<result column="E_REG_D" property="e_reg_d"/>
		<result column="E_DEL_YN" property="e_del_yn"/>
		<result column="US_ID" property="us_id"/>
	</resultMap>
	
	<insert id="insertMessage" parameterType="Note">
		insert into user_note
		values(seq_un_id.nextval, #{un_content}, sysdate, default, #{p_id}, 
, #{e_id}, #{us_id})
	</insert>
	
	<select id="getReviewCount" resultType="_int">
		select count(*)
		from estateagent_review
		where er_del_yn = 'N' and e_id = #{e_id}
	</select>
	
	<select id="selectReviewList" resultMap="reviewResultSet">
		select * 
		from(select rownum rnum, descreview.*
		from (select er_id, er_content, er_point, er_reg_d, er_del_yn, e_id, m.us_id us_id, us_name, us_picture
		        from estateagent_review er
		        join member m on (m.us_id = er.us_id)
		        where er_del_yn='N'
		        and e_id=#{e_id}
		        order by er_id desc) descreview)
	</select>
	
	<resultMap type="Review" id="reviewResultSet">
		<id column="ER_ID" property="er_id"/>
		<result column="ER_CONTENT" property="er_content"/>
		<result column="ER_POINT" property="er_point"/>
		<result column="ER_REG_D" property="er_reg_d"/>
		<result column="ER_DEL_YN" property="er_del_yn"/>
		<result column="E_ID" property="e_id"/>
		<result column="US_ID" property="us_id"/>
		<result column="US_NAME" property="us_name"/>
		<result column="US_PICTURE" property="us_picture"/>
	</resultMap>
	
	<select id="getTotalEstatePoint" resultType="_int">
		select 
		nvl(sum(er_point),0)
		from estateagent_review 
		where e_id=#{e_id} and er_del_yn='N'
	</select>
	
	<select id="reviewIdCheck" parameterType="map" resultType="_int">
		select count(*)
		from estateagent_review
		where us_id = #{us_id} and e_id = #{e_id} and er_del_yn='N'
	</select>
	
	<update id="updateEstatePoint" parameterType="map">
		update estateagent
        set e_point=#{avg}
        where e_id=#{e_id}
	</update>
	
	<insert id="insertReview" parameterType="Review">
		insert into estateagent_review
		values(seq_er_id.nextval, #{er_content}, #{er_point}, sysdate, default, #{us_id}, #{e_id})
	</insert>
	
	<update id="deleteReview">
		update estateagent_review
        set er_del_yn='Y'
        where er_id=#{er_id}
	</update>
	
	<resultMap type="Estate" id="estateResultSet">
		<id column="E_ID" property="e_id"/>
		<result column="E_NAME" property="e_name"/>
		<result column="E_PHONE" property="e_phone"/>
		<result column="E_CONTENT" property="e_content"/>
		<result column="E_ADDR" property="e_addr"/>
		<result column="E_PICTURE" property="e_picture"/>
		<result column="E_FIELD" property="e_field"/>
		<result column="E_COORD" property="e_coord"/>
		<result column="E_C_LAT" property="e_c_lat"/>
		<result column="E_C_LNG" property="e_c_lng"/>
		<result column="E_POINT" property="e_point"/>
		<result column="E_REG_D" property="e_reg_d"/>
		<result column="E_DEL_YN" property="e_del_yn"/>
		<result column="US_ID" property="us_id"/>
	</resultMap>
	
	<select id="selectEstateInfo" resultMap="estateResultSet">
		select *
		from estateagent
		where us_id=#{us_id}
		and e_del_yn='N'
	</select>
	
	<update id="updateMember">
		update member
		set us_name=#{us_name}, us_phone=#{us_phone}, us_email=#{us_email}, us_picture=#{us_picture}
		where us_id=#{us_id}
	</update>
	
	<update id="mdelete">
		update member
		set us_del_yn='Y'
		where us_id=#{us_id}
	</update>
	
	<update id="updateEstate">
		update estateagent
		set e_name=#{e_name}, e_phone=#{e_phone}, e_content=#{e_content}, e_addr=#{e_addr},
		e_picture=#{e_picture}, e_field=#{e_field}, e_reg_num=#{e_reg_num}
		where e_id=#{e_id}
	</update>
	
	<update id="edelete">
		update estateagent
		set e_del_yn='Y'
		where e_id=#{e_id}
	</update>
	
	<select id="checkEstate" resultType="_int">
		select count(*)
		from estateagent
		where us_id=#{us_id}
		and e_del_yn='N'
	</select>
	
	<select id="getNoteCount" resultType="_int">
		select count(*)
		from user_note
		where e_id=#{e_id}
		and un_del_yn='N'
	</select>
	
	
	<select id="selectNoteList" resultMap="noteResultSet">
		select * 
		from(select rownum rnum, descnote.*
		from (select un_id, un_content, un_send_d, un_del_yn, p_id, pr_id, e_id, m.us_id us_id, us_name, us_phone, us_picture
		from user_note un
		join member m on (m.us_id = un.us_id)
		where un_del_yn='N'
		and e_id=#{e_id}
		order by un_id desc) descnote)
	</select>
	
	<resultMap type="Note" id="noteResultSet">
		<id column="UN_ID" property="un_id"/>
		<result column="UN_CONTENT" property="un_content"/>
		<result column="UN_SEND_D" property="un_send_d"/>
		<result column="UN_DEL_YN" property="un_del_yn"/>
		<result column="P_ID" property="p_id"/>
		<result column="PR_ID" property="pr_id"/>
		<result column="E_ID" property="e_id"/>
		<result column="US_ID" property="us_id"/>
		<result column="US_NAME" property="us_name"/>
		<result column="US_PHONE" property="us_phone"/>
		<result column="US_PICTURE" property="us_picture"/>
	</resultMap>
	
	<select id="getSearchNoteListCount" parameterType="map" resultType="_int">
		select count(*)
		from user_note un
			 join member m on(m.us_id = un.us_id)
		where un_del_yn = 'N'
		and e_id=#{e_id}
		<if test="sc.us_name != null">
			and us_name like '%' || #{sc.us_name} || '%'
		</if>
		<if test="sc.p_id != null">
			and p_id like '%' || #{sc.p_id} || '%'
		</if>
				
	</select>
	
	<select id="selectSearchNoteList" parameterType="map" resultMap="noteResultSet">
		select * 
		from user_note un
			join member m on(m.us_id = un.us_id)
		where un_del_yn = 'N'
		and e_id=#{e_id}
		<choose>
			<when test="sc.us_name != null">
				and us_name like '%' || #{sc.us_name} || '%'
			</when>
			<otherwise>
				and p_id like '%' || #{sc.p_id} || '%'
			</otherwise>
		</choose>
			order by un_id desc
		
	</select>
	
	<resultMap type="ProductApplication" id="estatePropertyResultSet">
		<id column="A_ID" property="a_id"/>
		<result column="A_STATUS" property="a_status"/>
		<result column="A_DATE" property="a_date"/>
		<result column="P_ID" property="p_id"/>
		<result column="PR_ID" property="pr_id"/>
		<result column="E_ID" property="e_id"/>
		<result column="P_ADDR" property="p_addr"/>
		<result column="P_FIELD" property="p_field"/>
		<result column="P_FLOOR" property="p_floor"/>
		<result column="P_SIZE" property="p_size"/>
		<result column="P_STR" property="p_str"/>
		<result column="P_KIND" property="p_kind"/>
		<result column="P_ROOM" property="p_room"/>
		<result column="P_S_SIZE" property="p_s_size"/>
		<result column="P_D_SIZE" property="p_d_size"/>
		<result column="P_LAYER" property="p_layer"/>
		<result column="P_DEAL" property="p_deal"/>
		<result column="P_CHARTER" property="p_charter"/>
		<result column="P_RENT" property="p_rent"/>
		<result column="P_DEPOSIT" property="p_deposit"/>
		<result column="P_COST" property="p_cost"/>
		<result column="P_COST_ITEM" property="p_cost_item"/>
		<result column="P_EN_D" property="p_en_d"/>
		<result column="P_CONTENT" property="p_content"/>
		<result column="P_HEAT" property="p_heat"/>
		<result column="P_DIR" property="p_dir"/>
		<result column="P_PARK" property="p_park"/>
		<result column="P_ELEVATOR" property="p_elevator"/>
		<result column="P_VERANDAR" property="p_verandar"/>
		<result column="P_PET" property="p_pet"/>
		<result column="P_BUILT_IN" property="p_built_in"/>
		<result column="P_LOAN" property="p_loan"/>
		<result column="P_OPTION" property="p_option"/>
		<result column="P_PICTURE" property="p_picture"/>
		<result column="P_REG_D" property="p_reg_d"/>
		<result column="P_REG_STATUS" property="p_reg_status"/>
		<result column="P_DEL_YN" property="p_del_yn"/>
		<result column="US_ID" property="us_id"/>
		<result column="US_NAME" property="us_name"/>
		<result column="US_PHONE" property="us_phone"/>
		<result column="US_EMAIL" property="us_email"/>
		<result column="US_PICTURE" property="us_picture"/>
	</resultMap>
	
	<select id="selectPropertyList" resultMap="estatePropertyResultSet">
		select * 
        from(select rownum rnum, descpa.*
		from (select a_id, a_status, a_date, pa.p_id p_id, pr_id, e_id, p_addr, p_field, p_floor, p_size,
        p_str, p_kind, p_room, p_s_size, p_d_size, p_layer, p_deal, p_charter, p_rent, p_deposit, p_cost,
        p_cost_item, p_en_d, p_content, p_heat, p_dir, p_park, p_elevator, p_verandar, p_pet, p_built_in,
        p_loan, p_option, p_picture, p_reg_d, p_reg_status, p_del_yn, p.us_id us_id, us_name, us_phone, us_picture, us_email
		from product_application pa
        	join product p on (p.p_id = pa.p_id)
        	join member m on (m.us_id = p.us_id)
		where p_del_yn='N'
        and a_status='A'
        and p_reg_status='Y'
        and e_id=#{e_id}
		order by a_id desc) descpa)
	</select>
	
	<select id="getPropertyListCount" resultType="_int">
		select count(*)
		from product_application pa
			join product p on (p.p_id = pa.p_id)
		where e_id=#{e_id}
		and p_del_yn='N'
        and a_status='A'
        and p_reg_status='Y'
	</select>
	
	<select id="getSearchPropertyListCount" parameterType="map" resultType="_int">
		select count(*)
		from product_application pa
			join product p on (p.p_id = pa.p_id)
		where p_del_yn='N'
        and a_status='A'
        and p_reg_status='Y'
        and e_id=#{e_id}
        <if test="sc.p_id != null">
			and p.p_id like '%' || #{sc.p_id} || '%'
		</if>
		<if test="sc.p_field != null">
			and p_field like '%' || #{sc.p_field} || '%'
		</if>
		<if test="sc.p_kind != null">
			and p_kind like '%' || #{sc.p_kind} || '%'
		</if>
				
	</select>
	
	<select id="selectSearchPropertyList" parameterType="map" resultMap="estatePropertyResultSet">
		select a_id, a_status, a_date, pa.p_id p_id, pr_id, e_id, p_addr, p_field, p_floor, p_size,
        p_str, p_kind, p_room, p_s_size, p_d_size, p_layer, p_deal, p_charter, p_rent, p_deposit, p_cost,
        p_cost_item, p_en_d, p_content, p_heat, p_dir, p_park, p_elevator, p_verandar, p_pet, p_built_in,
        p_loan, p_option, p_picture, p_reg_d, p_reg_status, p_del_yn, p.us_id us_id, us_name, us_phone, us_picture, us_email
		from product_application pa
			join product p on (p.p_id = pa.p_id)
			join member m on (m.us_id = p.us_id)
		where p_del_yn='N'
        and a_status='A'
        and p_reg_status='Y'
        and e_id=#{e_id}
		<choose>
			<when test="sc.p_id != null">
				and p.p_id like '%' || #{sc.p_id} || '%'
			</when>
			<when test="sc.p_field != null">
				and p_field like '%' || #{sc.p_field} || '%'
			</when>
			<otherwise>
				and p_kind like '%' || #{sc.p_kind} || '%'
			</otherwise>
		</choose>
			order by a_id desc
		
	</select>
	
	
	<update id="cancelProductApplication">
		update product_application
        set a_status='C'
        where a_id=#{a_id}
	</update>
	
	<update id="cancelProduct">
		update product
        set p_reg_status='N'
        where p_id=#{p_id}
	</update>
	
	
	<select id="getSearchProductApplicationListCount" parameterType="map" resultType="_int">
		select count(*)
		from product_application pa
			join product p on (p.p_id = pa.p_id)
		where p_del_yn='N'
        and a_status='W'
        and p_reg_status='N'
        and e_id=#{e_id}
        <if test="sc.p_id != null">
			and p.p_id like '%' || #{sc.p_id} || '%'
		</if>
		<if test="sc.p_field != null">
			and p_field like '%' || #{sc.p_field} || '%'
		</if>
		<if test="sc.p_kind != null">
			and p_kind like '%' || #{sc.p_kind} || '%'
		</if>
				
	</select>
	
	
	<select id="selectSearchProductApplicationList" parameterType="map" resultMap="estatePropertyResultSet">
		select a_id, a_status, a_date, pa.p_id p_id, pr_id, e_id, p_addr, p_field, p_floor, p_size,
        p_str, p_kind, p_room, p_s_size, p_d_size, p_layer, p_deal, p_charter, p_rent, p_deposit, p_cost,
        p_cost_item, p_en_d, p_content, p_heat, p_dir, p_park, p_elevator, p_verandar, p_pet, p_built_in,
        p_loan, p_option, p_picture, p_reg_d, p_reg_status, p_del_yn, p.us_id us_id, us_name, us_phone, us_picture, us_email
		from product_application pa
			join product p on (p.p_id = pa.p_id)
			join member m on (m.us_id = p.us_id)
		where p_del_yn='N'
        and a_status='W'
        and p_reg_status='N'
        and e_id=#{e_id}
		<choose>
			<when test="sc.p_id != null">
				and p.p_id like '%' || #{sc.p_id} || '%'
			</when>
			<when test="sc.p_field != null">
				and p_field like '%' || #{sc.p_field} || '%'
			</when>
			<otherwise>
				and p_kind like '%' || #{sc.p_kind} || '%'
			</otherwise>
		</choose>
			order by a_id desc
		
	</select>
	
	
	<update id="acceptProductApplication">
		update product_application
        set a_status='A'
        where a_id=#{a_id}
	</update>
	
	<update id="registProduct">
		update product
        set p_reg_status='Y'
        where p_id=#{p_id}
	</update>
	

</mapper>
